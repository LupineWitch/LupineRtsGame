//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Controls/BasicControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @BasicControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @BasicControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""BasicControls"",
    ""maps"": [
        {
            ""name"": ""DefaultCameraControls"",
            ""id"": ""6c15a227-4917-4a6c-b9c3-fa525dbea50a"",
            ""actions"": [
                {
                    ""name"": ""MoveCamera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1c4af8b9-292a-46d1-8c30-d50ae842c17f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseClickMain"",
                    ""type"": ""Button"",
                    ""id"": ""5cb4f464-72c1-46c6-b163-3b8d10967a18"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""de52081b-7d02-4f2b-8855-907374378b65"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseScroll"",
                    ""type"": ""PassThrough"",
                    ""id"": ""3b9c973e-c86f-4ec9-8354-d64edf763762"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""4554e0bc-c354-481e-a65e-2f76f8252c41"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""081894c7-0898-4da9-801c-2a1637e2131a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c1e3f6e1-7b57-428f-b44e-65efa385650d"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a1993e9e-abce-42c6-b48d-66233f29b854"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""3b94f5b0-bf2a-4b2a-a3f9-ecd22431401f"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MoveCamera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""325c3031-25e5-4b8c-ad35-3b2db8c45dfd"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MouseClickMain"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d2b6915-63d7-4553-960f-7ada07118330"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""ScrollWheel"",
                    ""id"": ""db1c5719-5b97-44b3-8322-ee87b1e06031"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""3078bcd4-c66e-4342-ac7b-10338624f2b2"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c5e8c102-cbe5-4eb4-86e5-d478e5d4a9ec"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MouseScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""CommandControls"",
            ""id"": ""1b438e87-236c-4f78-b121-1b20e2aa0005"",
            ""actions"": [
                {
                    ""name"": ""PointerPosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""cdefef12-0685-4b34-8ada-19703a682e2d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MainPointerDrag"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d333848d-5288-4ca9-bbc2-9da7e9342577"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Select"",
                    ""type"": ""Button"",
                    ""id"": ""a4030e0c-72f9-4896-a927-c93093245534"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SendCommand"",
                    ""type"": ""Button"",
                    ""id"": ""c8d34856-ca60-40a3-9376-f70378d1f922"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""62935892-83c8-4314-9ad1-9107a36037e1"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""PointerPosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""PointerDrag"",
                    ""id"": ""1595b408-bb70-44c9-9d0f-dd8bedd9cef1"",
                    ""path"": ""MouseDrag"",
                    ""interactions"": ""MouseDrag"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainPointerDrag"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Button"",
                    ""id"": ""0c28d0a3-e1af-4ab7-a2cd-33d27ae759e3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MainPointerDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Axis1"",
                    ""id"": ""551ac77e-c273-43a4-8345-4f26e8ce887d"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MainPointerDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Axis2"",
                    ""id"": ""360ebea4-2072-4feb-bef4-2fd1d9ec2a72"",
                    ""path"": ""<Mouse>/delta/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PCSontrolScheme"",
                    ""action"": ""MainPointerDrag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a0af7afd-b62a-4d82-b736-eea2e11683ee"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Select"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05ee420e-927f-4ca9-9b9f-f37b4fe9c94d"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SendCommand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PCSontrolScheme"",
            ""bindingGroup"": ""PCSontrolScheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // DefaultCameraControls
        m_DefaultCameraControls = asset.FindActionMap("DefaultCameraControls", throwIfNotFound: true);
        m_DefaultCameraControls_MoveCamera = m_DefaultCameraControls.FindAction("MoveCamera", throwIfNotFound: true);
        m_DefaultCameraControls_MouseClickMain = m_DefaultCameraControls.FindAction("MouseClickMain", throwIfNotFound: true);
        m_DefaultCameraControls_MousePosition = m_DefaultCameraControls.FindAction("MousePosition", throwIfNotFound: true);
        m_DefaultCameraControls_MouseScroll = m_DefaultCameraControls.FindAction("MouseScroll", throwIfNotFound: true);
        // CommandControls
        m_CommandControls = asset.FindActionMap("CommandControls", throwIfNotFound: true);
        m_CommandControls_PointerPosition = m_CommandControls.FindAction("PointerPosition", throwIfNotFound: true);
        m_CommandControls_MainPointerDrag = m_CommandControls.FindAction("MainPointerDrag", throwIfNotFound: true);
        m_CommandControls_Select = m_CommandControls.FindAction("Select", throwIfNotFound: true);
        m_CommandControls_SendCommand = m_CommandControls.FindAction("SendCommand", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // DefaultCameraControls
    private readonly InputActionMap m_DefaultCameraControls;
    private IDefaultCameraControlsActions m_DefaultCameraControlsActionsCallbackInterface;
    private readonly InputAction m_DefaultCameraControls_MoveCamera;
    private readonly InputAction m_DefaultCameraControls_MouseClickMain;
    private readonly InputAction m_DefaultCameraControls_MousePosition;
    private readonly InputAction m_DefaultCameraControls_MouseScroll;
    public struct DefaultCameraControlsActions
    {
        private @BasicControls m_Wrapper;
        public DefaultCameraControlsActions(@BasicControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveCamera => m_Wrapper.m_DefaultCameraControls_MoveCamera;
        public InputAction @MouseClickMain => m_Wrapper.m_DefaultCameraControls_MouseClickMain;
        public InputAction @MousePosition => m_Wrapper.m_DefaultCameraControls_MousePosition;
        public InputAction @MouseScroll => m_Wrapper.m_DefaultCameraControls_MouseScroll;
        public InputActionMap Get() { return m_Wrapper.m_DefaultCameraControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DefaultCameraControlsActions set) { return set.Get(); }
        public void SetCallbacks(IDefaultCameraControlsActions instance)
        {
            if (m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface != null)
            {
                @MoveCamera.started -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMoveCamera;
                @MoveCamera.performed -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMoveCamera;
                @MoveCamera.canceled -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMoveCamera;
                @MouseClickMain.started -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMouseClickMain;
                @MouseClickMain.performed -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMouseClickMain;
                @MouseClickMain.canceled -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMouseClickMain;
                @MousePosition.started -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMousePosition;
                @MouseScroll.started -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMouseScroll;
                @MouseScroll.performed -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMouseScroll;
                @MouseScroll.canceled -= m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface.OnMouseScroll;
            }
            m_Wrapper.m_DefaultCameraControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveCamera.started += instance.OnMoveCamera;
                @MoveCamera.performed += instance.OnMoveCamera;
                @MoveCamera.canceled += instance.OnMoveCamera;
                @MouseClickMain.started += instance.OnMouseClickMain;
                @MouseClickMain.performed += instance.OnMouseClickMain;
                @MouseClickMain.canceled += instance.OnMouseClickMain;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @MouseScroll.started += instance.OnMouseScroll;
                @MouseScroll.performed += instance.OnMouseScroll;
                @MouseScroll.canceled += instance.OnMouseScroll;
            }
        }
    }
    public DefaultCameraControlsActions @DefaultCameraControls => new DefaultCameraControlsActions(this);

    // CommandControls
    private readonly InputActionMap m_CommandControls;
    private ICommandControlsActions m_CommandControlsActionsCallbackInterface;
    private readonly InputAction m_CommandControls_PointerPosition;
    private readonly InputAction m_CommandControls_MainPointerDrag;
    private readonly InputAction m_CommandControls_Select;
    private readonly InputAction m_CommandControls_SendCommand;
    public struct CommandControlsActions
    {
        private @BasicControls m_Wrapper;
        public CommandControlsActions(@BasicControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @PointerPosition => m_Wrapper.m_CommandControls_PointerPosition;
        public InputAction @MainPointerDrag => m_Wrapper.m_CommandControls_MainPointerDrag;
        public InputAction @Select => m_Wrapper.m_CommandControls_Select;
        public InputAction @SendCommand => m_Wrapper.m_CommandControls_SendCommand;
        public InputActionMap Get() { return m_Wrapper.m_CommandControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CommandControlsActions set) { return set.Get(); }
        public void SetCallbacks(ICommandControlsActions instance)
        {
            if (m_Wrapper.m_CommandControlsActionsCallbackInterface != null)
            {
                @PointerPosition.started -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnPointerPosition;
                @PointerPosition.performed -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnPointerPosition;
                @PointerPosition.canceled -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnPointerPosition;
                @MainPointerDrag.started -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnMainPointerDrag;
                @MainPointerDrag.performed -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnMainPointerDrag;
                @MainPointerDrag.canceled -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnMainPointerDrag;
                @Select.started -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnSelect;
                @Select.performed -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnSelect;
                @Select.canceled -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnSelect;
                @SendCommand.started -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnSendCommand;
                @SendCommand.performed -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnSendCommand;
                @SendCommand.canceled -= m_Wrapper.m_CommandControlsActionsCallbackInterface.OnSendCommand;
            }
            m_Wrapper.m_CommandControlsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PointerPosition.started += instance.OnPointerPosition;
                @PointerPosition.performed += instance.OnPointerPosition;
                @PointerPosition.canceled += instance.OnPointerPosition;
                @MainPointerDrag.started += instance.OnMainPointerDrag;
                @MainPointerDrag.performed += instance.OnMainPointerDrag;
                @MainPointerDrag.canceled += instance.OnMainPointerDrag;
                @Select.started += instance.OnSelect;
                @Select.performed += instance.OnSelect;
                @Select.canceled += instance.OnSelect;
                @SendCommand.started += instance.OnSendCommand;
                @SendCommand.performed += instance.OnSendCommand;
                @SendCommand.canceled += instance.OnSendCommand;
            }
        }
    }
    public CommandControlsActions @CommandControls => new CommandControlsActions(this);
    private int m_PCSontrolSchemeSchemeIndex = -1;
    public InputControlScheme PCSontrolSchemeScheme
    {
        get
        {
            if (m_PCSontrolSchemeSchemeIndex == -1) m_PCSontrolSchemeSchemeIndex = asset.FindControlSchemeIndex("PCSontrolScheme");
            return asset.controlSchemes[m_PCSontrolSchemeSchemeIndex];
        }
    }
    public interface IDefaultCameraControlsActions
    {
        void OnMoveCamera(InputAction.CallbackContext context);
        void OnMouseClickMain(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
    }
    public interface ICommandControlsActions
    {
        void OnPointerPosition(InputAction.CallbackContext context);
        void OnMainPointerDrag(InputAction.CallbackContext context);
        void OnSelect(InputAction.CallbackContext context);
        void OnSendCommand(InputAction.CallbackContext context);
    }
}
